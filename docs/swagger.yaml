basePath: /
definitions:
  models.Order:
    properties:
      customer_name:
        type: string
      id:
        type: integer
      items:
        items:
          $ref: '#/definitions/models.ProductItem'
        type: array
      total_price:
        type: number
    type: object
  models.Product:
    properties:
      id:
        type: integer
      name:
        type: string
      price:
        type: number
    type: object
  models.ProductItem:
    properties:
      id:
        type: integer
      order_id:
        type: integer
      price:
        type: number
      product:
        $ref: '#/definitions/models.Product'
      product_id:
        type: integer
      quantity:
        type: integer
    type: object
host: localhost:3000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Supermarket API for studies.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Supermarket API
  version: "2.0"
paths:
  /order:
    get:
      description: get all orders hot reload
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
        "404":
          description: Not Found
          schema:
            type: object
      summary: Get all orders
      tags:
      - Orders
    post:
      consumes:
      - application/json
      description: Create new order
      parameters:
      - description: Order Data
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: object
      summary: Create new order based on parameters
      tags:
      - Orders
  /product:
    get:
      description: get all products
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
        "404":
          description: Not Found
          schema:
            type: object
      summary: Get all products
      tags:
      - Products
    post:
      consumes:
      - application/json
      description: Create new product
      parameters:
      - description: Product Data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: object
      summary: Create new product based on parameters
      tags:
      - Products
schemes:
- http
swagger: "2.0"
